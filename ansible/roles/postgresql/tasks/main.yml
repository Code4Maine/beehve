---
- name: Install PostgreSQL with locale set
  shell: LANG={{locale}} LC_COLLATE={{locale}} LC_CTYPE={{locale}} LC_MESSAGES={{locale}} LC_MONETARY={{locale}} LC_NUMERIC={{locale}} LC_TIME={{locale}} LC_ALL={{locale}}  apt-get install -y postgresql-9.5

- name: Install PostgreSQL Dev Tools
  apt: pkg={{item}} state=installed
  with_items:
    - postgresql-server-dev-9.5
    - postgresql-contrib-9.5
    - python-psycopg2

- name: Install PostgreSQL GIS tools
  apt: pkg={{item}} state=installed
  with_items:
    - postgresql-9.5-postgis-2.2
    - postgis
    - libgdal1-dev
    - libgeos-dev
    - libgeos-c1 
    - libxml2 
    - libxml2-dev
  when: postgis_required == True

- name: Change access permissions for PostgreSQL
  copy: src=pg_hba.conf dest=/etc/postgresql/9.5/main/pg_hba.conf
  become_user: postgres
  register: pg_file

- name: Reload PostgreSQL if it changed
  service: name=postgresql state=reloaded enabled=yes
  when: pg_file.changed

# The following only runs if we set the postgis flag in the playbook

- name: Ensure postgis_template database exists
  action: postgresql_db db=postgis_template state=present
  become_user: postgres
  register: createdb_postgis_template
  when: postgis_required == True
 
- name: Make postgis_template a template
  action: command psql -d postgis_template -c "UPDATE pg_database SET datistemplate=true WHERE datname='postgis_template';"
  become_user: postgres
  when: postgis_required and createdb_postgis_template.changed
 
- name: Run the PostGIS SQL scripts
  action: command psql -d postgis_template -f $item
  become_user: postgres
  with_items:
    - /usr/share/postgresql/9.1/contrib/postgis-1.5/postgis.sql
    - /usr/share/postgresql/9.1/contrib/postgis-1.5/spatial_ref_sys.sql
    - /usr/share/postgresql/9.1/contrib/postgis_comments.sql
  when: postgis_required and createdb_postgis_template.changed

- name: Copy db_dump script
  copy: src=db_dump.sh dest=/var/lib/postgresql/db_dump.sh
  become_user: postgres
  tags:
    - db-backup

- name: Ensure the database backup directory is present
  file: state=directory path=/var/backups/databases
  tags:
    - db-backup

- name: Ensure the lastest database backup directory is present
  file: state=directory path=/var/backups/databases/latest
  tags:
    - db-backup
  
- name: Create cronjob to run at 3 a.m. EST
  cron: name="Backup DB locally and to S3" hour="3" job="db_dump.sh > /dev/null"
  become_user: postgres
  tags:
    - db-backup

